<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd 
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd   
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.thsword.netjob.web" />

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- don't handle the static resource -->
	<mvc:default-servlet-handler />

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg ref="utf8Charset" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<bean id="utf8Charset" class="java.nio.charset.Charset"
		factory-method="forName">
		<constructor-arg value="UTF-8" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过1G。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="1024000000" />
		<!--resolveLazily属性启用是为了推迟文件解析，以便在UploadController 中捕获文件大小异常 -->
		<property name="resolveLazily" value="true" />
	</bean>

	<!-- <bean
		class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" /> -->
	
	<context:annotation-config/>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.thsword.netjob.web.filter.CommonFilter">
				<property name="logUrls">
					<list>
						<!-- 如果请求中包含以下路径，进行日志打印 -->
						<value>/admin/</value>
						<value>/app/</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/admin/**" />
			<bean class="com.thsword.netjob.web.filter.AdminTokenFilter">
				<property name="allowUrls">
					<list>
						<!-- 如果请求中包含以下路径，则不进行拦截 -->
						<value>/admin/login</value>
						<value>/admin/logout</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/admin/**" />
			<bean class="com.thsword.netjob.web.filter.AuthcFilter">
				<property name="allowUrls">
					<list>
						<value>/admin/login</value>
						<value>/admin/logout</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/app/**" />
			<bean class="com.thsword.netjob.web.filter.AccessFilter">
				<property name="allowUrls">  
		            <list>  
		              <value>/app/rechangeWx/callback</value>
		              <value>/app/rechangeAlipay/callback</value>
		            </list>  
          		</property>
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/app/member/**" />
			<bean class="com.thsword.netjob.web.filter.AppTokenFilter">
				<!-- <property name="allowUrls">
					<list>
					</list>
				</property> -->
			</bean>
		</mvc:interceptor> 
		<mvc:interceptor>
			<mvc:mapping path="/wx/**" />
			<bean class="com.thsword.netjob.web.filter.WXFilter">
				<!-- <property name="allowUrls">
					<list>
						<value>/admin/login</value>
						<value>/admin/logout</value>
					</list>
				</property> -->
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

</beans> 